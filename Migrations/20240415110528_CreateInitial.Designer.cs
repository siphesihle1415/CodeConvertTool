// <auto-generated />
using System;
using CodeConverterTool.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CodeConverterTool.Migrations
{
    [DbContext(typeof(ConvertToolDbContext))]
    [Migration("20240415110528_CreateInitial")]
    partial class CreateInitial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CodeConverterTool.Models.Developer", b =>
                {
                    b.Property<int>("DevId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("dev_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DevId"));

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("username");

                    b.HasKey("DevId")
                        .HasName("PK__develope__8AB90B4949C53C0F");

                    b.ToTable("developers", (string)null);
                });

            modelBuilder.Entity("CodeConverterTool.Models.Script", b =>
                {
                    b.Property<int>("ScriptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("script_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScriptId"));

                    b.Property<int>("DevId")
                        .HasColumnType("int")
                        .HasColumnName("dev_id");

                    b.Property<DateTime?>("LastUpdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("last_updated")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ScriptName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("script_name");

                    b.Property<string>("ScriptS3Uri")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("script_s3_uri");

                    b.Property<int>("ScriptType")
                        .HasColumnType("int")
                        .HasColumnName("script_type");

                    b.Property<int>("ScriptVersion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("script_version");

                    b.HasKey("ScriptId")
                        .HasName("PK__scripts__EDFCC9DF1DA27B3B");

                    b.HasIndex("DevId");

                    b.HasIndex("ScriptType");

                    b.ToTable("scripts", (string)null);
                });

            modelBuilder.Entity("CodeConverterTool.Models.Scripttypelookup", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("type_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeId"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("type");

                    b.HasKey("TypeId")
                        .HasName("PK__scriptty__2C0005986CC1562B");

                    b.ToTable("scripttypelookup", (string)null);
                });

            modelBuilder.Entity("CodeConverterTool.Models.Script", b =>
                {
                    b.HasOne("CodeConverterTool.Models.Developer", "Dev")
                        .WithMany("Scripts")
                        .HasForeignKey("DevId")
                        .IsRequired()
                        .HasConstraintName("FK__scripts__dev_id__276EDEB3");

                    b.HasOne("CodeConverterTool.Models.Scripttypelookup", "ScriptTypeNavigation")
                        .WithMany("Scripts")
                        .HasForeignKey("ScriptType")
                        .IsRequired()
                        .HasConstraintName("FK__scripts__script___286302EC");

                    b.Navigation("Dev");

                    b.Navigation("ScriptTypeNavigation");
                });

            modelBuilder.Entity("CodeConverterTool.Models.Developer", b =>
                {
                    b.Navigation("Scripts");
                });

            modelBuilder.Entity("CodeConverterTool.Models.Scripttypelookup", b =>
                {
                    b.Navigation("Scripts");
                });
#pragma warning restore 612, 618
        }
    }
}
